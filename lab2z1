from typing import Any

class Node:
    def __init__(self, value:Any):
        self.value = value
        self.next = None


class LinkedList:
    def __init__(self):
        self.head = None
        self.tail = None

    def __str__(self):
        strng = ""
        node = self.head
        for x in range(len(self)):
            if node.next != None:
                strng += str(node.value) + " -> "
            if node.next == None:
                strng += str(node.value)
            node = node.next
        return strng

    def push(self, value: Any) -> None:
        newNode = Node(value)
        newNode.next = self.head
        self.head = newNode

    def printll(self):
        temp = self.head
        if (temp != None):

            while (temp != None):
                print(temp.value, end=" ")
                temp = temp.next
            print()
        else:
            print("Lista jest pusta!")




    def append(self, value: Any):
        newNode = Node(value)
        if (self.head==None):
            self.head=newNode
            return
        else:
            temp = self.head
            while (temp.next!=None):
                temp=temp.next
            temp.next=newNode

    def insert(self, value: Any, after: Node):
        newNode = Node(value)
        if (after < 1):
            print("\nMusisz podać liczbę wieksza od 0")
        elif (after == 1):
            newNode.next = self.head
            self.head = newNode
        else:
            temp = self.head
            for i in range(1, after - 1):
                if (temp != None):
                    temp = temp.next
            if (temp != None):
                newNode.next = temp.next
                temp.next = newNode
            else:
                print("\nNie mozesz tego zrobic!")

    def pop(self):
        if (self.head != None):
            temp = self.head
            self.head = self.head.next
            temp = None
            return temp

    def remove_last(self):
        if (self.head != None):
            if (self.head.next == None):
                self.head = None
            else:
                temp = self.head
                while (temp.next.next != None):
                    temp = temp.next
                lastNode = temp.next
                temp.next = None
                lastNode = None

    def remove(self, after: Node):
        if (after < 0):
            print("\nMusisz podać liczbę wieksza od 0")
        elif (after == 0 and self.head != None):
            delnode = self.head
            self.head = self.head.next
            delnode = None

        else:
            temp = self.head
            for i in range(0, after - 0):
                if (temp != None):
                    temp = temp.next


            if (temp != None and temp.next != None):
                delnode = temp.next
                temp.next = temp.next.next
                delnode = None
            else:
                print("\nPodana pozycja jest pusta.")

    def __len__(self):
        temp = self.head
        i = 0
        while (temp != None):
            i += 1
            temp = temp.next
        return i





list_ = LinkedList()
list_.push(10)
list_.push(20)
list_.append(41)

list_.remove(1)
list_.printll()




